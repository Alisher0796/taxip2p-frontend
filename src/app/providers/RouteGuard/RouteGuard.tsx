import { ReactNode, useEffect, useState, useRef } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useTelegram } from '@/shared/hooks/useTelegram';
import { api } from '@/shared/api/http';
import { ErrorScreen } from '@/shared/ui/ErrorScreen';
import { safeWebApp } from '@/app/utils/safeTelegram';
import { LoadingScreen } from '@/shared/ui/LoadingScreen';
import type { Profile } from '@/shared/types/api';

const AUTH_RETRY_DELAY = 2000; // 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
const MAX_AUTH_RETRIES = 3; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫

interface RouteGuardProps {
  children: ReactNode;
  requiredRole?: 'passenger' | 'driver';
}

/**
 * –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è RouteGuard, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–±–µ–≥–∞–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, 
 * –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function RouteGuard({ children, requiredRole }: RouteGuardProps) {
  const { isReady } = useTelegram();
  const navigate = useNavigate();
  const location = useLocation();
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<Error | null>(null);
  const [retryCount, setRetryCount] = useState(0);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ø—ã—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const authRetryTimeoutRef = useRef<number | null>(null);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  const isDevMode = import.meta.env.DEV || import.meta.env.VITE_DEV_MODE === 'true';

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const checkTelegramAuthStatus = () => {
    const webApp = safeWebApp();
    
    if (!webApp) {
      console.warn('‚ö†Ô∏è WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
      return false;
    }
    
    const initData = webApp.initData;
    
    if (!initData || initData.length < 10) {
      console.warn('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram:', { 
        initDataLength: initData?.length || 0 
      });
      return false;
    }
    
    return true;
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const handleAuthError = (err: any) => {
    console.error('üîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –æ—à–∏–±–∫–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π Telegram
    const isAuthError = 
      err?.message?.toLowerCase().includes('–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü') ||
      err?.message?.toLowerCase().includes('telegram') ||
      err?.message?.toLowerCase().includes('init data');
      
    if (isAuthError && retryCount < MAX_AUTH_RETRIES) {
      console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ${retryCount + 1}/${MAX_AUTH_RETRIES}...`);
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
      setRetryCount(prev => prev + 1);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram
      const isValidAuth = checkTelegramAuthStatus();
      
      if (!isValidAuth) {
        console.warn('üîÑ –î–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã, –ø–ª–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É...');
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
        if (authRetryTimeoutRef.current) {
          window.clearTimeout(authRetryTimeoutRef.current);
        }
        
        // –ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        authRetryTimeoutRef.current = window.setTimeout(() => {
          console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
          window.location.reload();
        }, AUTH_RETRY_DELAY);
        
        return;
      }
      
      // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –ø–æ—Ä—è–¥–∫–µ, –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ—Ñ–∏–ª—è
      setTimeout(checkAccess, AUTH_RETRY_DELAY);
      return;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –ø–æ–ø—ã—Ç–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
    setError(err instanceof Error ? err : new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è'));
    setIsLoading(false);
  };

  const checkAccess = async () => {
    try {
      if (!isReady) {
        console.debug('Telegram not ready yet, waiting...');
        return; // –ï—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ, –∂–¥–µ–º
      }

      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–∫-–¥–∞–Ω–Ω—ã–µ
      if (isDevMode && retryCount >= MAX_AUTH_RETRIES) {
        console.log('üõ†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
        setIsLoading(false);
        return;
      }

      const userResponse = await api.getProfile() as Profile;
      console.debug('‚úÖ User profile loaded:', userResponse);

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
      if (retryCount > 0) {
        setRetryCount(0);
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
      if (requiredRole && userResponse.role !== requiredRole) {
        console.warn(`‚ö†Ô∏è –¢—Ä–µ–±—É–µ–º–∞—è —Ä–æ–ª—å: ${requiredRole}, —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userResponse.role}`);
        navigate('/');
        return;
      }

      if (!userResponse.role) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
        if (location.pathname !== '/welcome') {
          navigate('/welcome');
        }
      } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞
        if (location.pathname === '/welcome') {
          navigate('/');
        }
      }

      setIsLoading(false);
    } catch (err) {
      handleAuthError(err);
    }
  };

  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
  useEffect(() => {
    if (isReady) {
      checkAccess();
    }
    
    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (authRetryTimeoutRef.current) {
        window.clearTimeout(authRetryTimeoutRef.current);
      }
    };
  }, [isReady, location.pathname, requiredRole]);

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
  if (error) {
    return (
      <ErrorScreen
        title="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
        message={error.message}
        description="–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Telegram."
        buttonText="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞"
        onRetry={() => {
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –∏ –æ—à–∏–±–∫—É
          setRetryCount(0);
          setError(null);
          setIsLoading(true);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
          const isValidAuth = checkTelegramAuthStatus();
          
          if (!isValidAuth) {
            console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
            window.location.reload();
            return;
          }
          
          checkAccess();
        }}
        secondaryButtonText="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É"
        onSecondaryAction={() => {
          window.location.reload();
        }}
      />
    );
  }

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (isLoading && !isDevMode) {
    return <LoadingScreen />;
  }

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  return <>{children}</>;
}
