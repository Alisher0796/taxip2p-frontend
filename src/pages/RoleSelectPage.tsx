// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ react-router –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –ø—Ä—è–º—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —á–µ—Ä–µ–∑ window.location
import { Button, Spinner } from '@/shared/ui';
import { Role } from '@/shared/types/common';
import { api } from '@/shared/api/http';
import { useTelegram } from '@/app/providers/TelegramProvider';
import { useCallback, useEffect, useRef, useState } from 'react';

// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
const roleRoutes: Record<Role, string> = {
  passenger: '/passenger',
  driver: '/driver',
};

const RoleSelectPage = () => {
  const [isLoading, setIsLoading] = useState(true);
  const [isSelecting, setIsSelecting] = useState(false);
  const [error, setError] = useState<string>();
  const { isReady, webApp, hideBackButton, hideMainButton, haptic } = useTelegram();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ —É—Ä–æ–≤–Ω–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const isDevMode = import.meta.env.DEV || import.meta.env.VITE_DEV_MODE === 'true';
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  const isInitialCheckDone = useRef(false);
  const navigationInProgress = useRef(false);

  // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
  const navigateToRolePage = useCallback((role: Role) => {
    // –ï—Å–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (navigationInProgress.current) {
      console.log('‚ÑπÔ∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
      return;
    }
    
    const nextRoute = roleRoutes[role];
    console.log('üö© –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞:', nextRoute);
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigationInProgress.current = true;
    
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º window.location –≤–º–µ—Å—Ç–æ navigate –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
      // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –∏ –∏–∑–±–µ–≥–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å history.replaceState
      window.location.pathname = nextRoute;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–æ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
      // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      navigationInProgress.current = false;
    }
  }, [setError]);

  // –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ WebApp –Ω–µ –≥–æ—Ç–æ–≤, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (!isReady || isInitialCheckDone.current) return;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ Telegram
    hideBackButton();
    hideMainButton();
    
    // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞
    isInitialCheckDone.current = true;
    
    const checkRole = async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        const profile = await api.getProfile();
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω:', profile);

        if (profile?.role) {
          // –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
          navigateToRolePage(profile.role);
        } else {
          console.log('‚ÑπÔ∏è –†–æ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å');
          setIsLoading(false);
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–æ–ª–∏:', error);
        
        // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É
        
        setError(error instanceof Error ? error.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–æ–ª—å');
        setIsLoading(false);
      }
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–æ–ª–∏ (–æ–¥–∏–Ω —Ä–∞–∑)
    checkRole();
  }, [isReady, navigateToRolePage, hideBackButton, hideMainButton]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  const handleRoleSelect = async (role: Role) => {
    // –ï—Å–ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—ã–±–æ—Ä –∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (isSelecting || navigationInProgress.current) {
      console.log('‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å WebApp –≤ production —Ä–µ–∂–∏–º–µ
    if (!isDevMode && (!isReady || !webApp)) {
      console.warn('‚ö†Ô∏è WebApp –Ω–µ –≥–æ—Ç–æ–≤:', { isReady, hasUser: !!webApp?.initDataUnsafe?.user });
      setError('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Telegram');
      return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞
    setIsSelecting(true);
    setError(undefined);
    console.log('üíª –í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å:', role);

    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–æ–ª—å
      await api.updateProfile({ role });
      haptic?.notification('success');
      console.log('‚úÖ –†–æ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ä–æ–ª–∏
      navigateToRolePage(role);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏:', error);
      haptic?.notification('error');
      
      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
      if (isDevMode) {
        console.log('üõ†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É');
        navigateToRolePage(role);
        return;
      }
      
      // –í production –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
      setError(error instanceof Error ? error.message : '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–æ–ª—å');
      setIsSelecting(false); // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    }
  };

  const isButtonDisabled = !isReady || isLoading || isSelecting;

  return (
    <div className="flex min-h-screen items-center justify-center bg-gray-100 p-4">
      <div className="w-full max-w-md rounded-lg bg-white p-6 text-center shadow-lg">
        {!isReady && (
          <Button
            onClick={() => (window.location.href = 'https://t.me/taxip2p_bot')}
            className="mt-6"
          >
            –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
          </Button>
        )}
        
        <h1 className="mb-4 text-xl font-bold text-gray-800">
          –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å
        </h1>

        {error && (
          <p className="mb-4 text-sm text-red-500" role="alert">
            {error}
          </p>
        )}

        {isLoading ? (
          <div className="flex justify-center py-8">
            <Spinner size="lg" />
          </div>
        ) : (
          <div className="mx-auto flex w-full max-w-xs flex-col gap-4">

          <Button
            size="lg"
            onClick={() => handleRoleSelect('passenger')}
            className="w-full"
            disabled={isButtonDisabled}
            isLoading={isSelecting}
          >
            –Ø –ø–∞—Å—Å–∞–∂–∏—Ä
          </Button>

          <Button
            variant="secondary"
            size="lg"
            onClick={() => handleRoleSelect('driver')}
            className="w-full"
            disabled={isButtonDisabled}
            isLoading={isSelecting}
          >
            –Ø –≤–æ–¥–∏—Ç–µ–ª—å
          </Button>
        </div>
        )}
      </div>
    </div>
  );
};

export default RoleSelectPage;
