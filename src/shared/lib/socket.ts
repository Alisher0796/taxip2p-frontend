import io from 'socket.io-client';

/**
 * –°–æ–∑–¥–∞–µ—Ç —Å–æ–∫–µ—Ç-–∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–µ–π Telegram-–¥–∞–Ω–Ω—ã—Ö
 * –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–∞–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–∞–∫ –∏ –≤ production
 */
export function createSocket() {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const telegramInitData = window.Telegram?.WebApp?.initData || '';
  const apiUrl = import.meta.env.VITE_API_URL;
  const isDevMode = import.meta.env.DEV;
  const authToken = localStorage.getItem('authToken');
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–æ–∫–µ—Ç–∞ - –æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–æ–∫–µ—Ç–∞ - –æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤
  const socketOptions: any = {
    autoConnect: false,            // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —Å–∞–º–∏ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ
    reconnection: true,            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
    reconnectionDelay: 1000,       // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    reconnectionAttempts: 5,       // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    timeout: 10000,                // –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (10 —Å–µ–∫)
    extraHeaders: {},              // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    query: {}                      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (telegramInitData) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º extraHeaders –≤–º–µ—Å—Ç–æ query, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –¥–ª–∏–Ω—É URL
    if (socketOptions.extraHeaders) {
      socketOptions.extraHeaders['Telegram-Init-Data'] = telegramInitData;
    }
    
    if (isDevMode) {
      console.log('üîë –î–æ–±–∞–≤–ª–µ–Ω—ã Telegram –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏');
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º JWT —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
  if (authToken && socketOptions.extraHeaders) {
    socketOptions.extraHeaders['Authorization'] = `Bearer ${authToken}`;
    
    if (isDevMode) {
      console.log('üîë –î–æ–±–∞–≤–ª–µ–Ω JWT —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏');
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ (–∫–æ—Ä–æ—Ç–∫–∏–µ) –¥–ª—è –∫–æ–º–ø–∞—Ç–∏–±–∏–ª—å–Ω–æ—Å—Ç–∏
  if (socketOptions.query) {
    socketOptions.query = {
      platform: 'telegram',
      version: '1.0.0',
      mode: isDevMode ? 'development' : 'production'
    };
  }
  
  if (isDevMode) {
    console.log('üîç –°–æ–∑–¥–∞–µ–º —Å–æ–∫–µ—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫:', apiUrl);
    console.log('üîë Telegram initData ' + (telegramInitData ? '–∏–º–µ–µ—Ç—Å—è' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'));
  }
  
  // –°–æ–∑–¥–∞–µ–º –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º —Å–æ–∫–µ—Ç
  const socket = io(apiUrl, socketOptions);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  if (isDevMode) {
    socket.on('connect', () => {
      console.log('üíö –°–æ–∫–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!');
    });

    socket.on('disconnect', (reason: string) => {
      console.log('üíî –°–æ–∫–µ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è:', reason);
    });

    socket.on('connect_error', (error: Error) => {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–æ–∫–µ—Ç—É:', error.message);
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL:', apiUrl);
      console.log('üîë –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram-Init-Data –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö');
    });

    socket.on('error', (error: Error) => {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∫–µ—Ç–∞:', error.message);
    });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    socket.on('auth_error', (error: any) => {
      console.error('üö´ –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏—è
    });

    socket.on('auth_success', (data: any) => {
      console.log('üëç –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', data);
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    });
  }

  return socket;
}
